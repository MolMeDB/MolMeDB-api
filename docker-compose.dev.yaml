services:
  # web:
  #   image: nginx:alpine
  #   container_name: molmedb-dev-web-server
  #   volumes:
  #    - ./:/var/www
  #    - ./docker/dev/nginx/nginx.conf:/etc/nginx/nginx.conf
  #   environment:
  #     - NGINX_HOST=localhost
  #   ports:
  #     - "9080:80"
  #   networks:
  #     - mmdb-dev-network
  #   depends_on:
  #     app:
  #       condition: service_started 

  # app:
  #   image: molmedb-app
  #   build:
  #     context: .
  #     dockerfile: ./docker/common/php-fpm/Dockerfile
  #     target: development
  #     args:
  #         UID: ${UID:-1000}
  #         GID: ${GID:-1000}
  #         XDEBUG_ENABLED: ${XDEBUG_ENABLED:-true}
  #         XDEBUG_MODE: develop,coverage,debug,profile
  #         XDEBUG_HOST: ${XDEBUG_HOST:-host.docker.internal}
  #         XDEBUG_IDE_KEY: ${XDEBUG_IDE_KEY:-DOCKER}
  #         XDEBUG_LOG: /dev/stdout
  #         XDEBUG_LOG_LEVEL: 0
  #   container_name: molmedb-dev-app
  #   volumes:
  #     - ./:/var/www
  #   env_file:
  #     - .env
  #   networks:
  #     - mmdb-dev-network
  #   user: "${UID:-1000}:${GID:-1000}"
  #   # healthcheck: // TODO
  #   #   test: ["CMD-SHELL", "php-fpm-healthcheck || exit 1"]
  #   #   interval: 10s
  #   #   timeout: 5s
  #   #   retries: 3
  #   depends_on:
  #     postgres:
  #       condition: service_healthy

  # app-scheduler-worker:
  #   image: molmedb-app 
  #   container_name: molmedb-dev-scheduler-worker
  #   tty: true
  #   environment:
  #     SERVICE_NAME: molmedb-dev-scheduler-worker
  #     SERVICE_TAGS: dev
  #   working_dir: /var/www
  #   volumes:
  #     - ./:/var/www
  #   networks:
  #     - mmdb-dev-network
  #   depends_on:
  #     - app
  #   command: php artisan schedule:work
  #   restart: unless-stopped 

  postgres:
    build: ./modules/bingo
    platform: linux/amd64
    privileged: true
    container_name: molmedb-db
    env_file: ./.env
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    shm_size: '8gb'
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${DB_USERNAME}", "-d", "${DB_DATABASE}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - mmdb-db:/var/lib/postgresql/data
    networks:
      - mmdb-dev-network

  adminer:
    image: adminer
    container_name: molmedb-adminer
    restart: unless-stopped
    ports: 
      - "8080:8080"
    depends_on:
      - postgres
    networks:
      - mmdb-dev-network

  # Currently not used by app
  # redis:
  #   image: redis:alpine
  #   restart: unless-stopped  # Automatically restart unless the service is explicitly stopped
  #   networks:
  #     - laravel-production
  #   # Health check for Redis
  #   # -----------------------------------------------------------
  #   # Checks if Redis is responding to the 'PING' command.
  #   # This ensures that the service is not only running but also operational.
  #   # -----------------------------------------------------------
  #   healthcheck:
  #     test: ["CMD", "redis-cli", "ping"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 3

networks:
  mmdb-dev-network:

volumes:
  mmdb-db: